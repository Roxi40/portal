{"ast":null,"code":"var _jsxFileName = \"D:\\\\LICENTA - PROGRESS\\\\frontend\\\\src\\\\screens\\\\UserEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state,\n        loading: true\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        loading: false\n      };\n\n    case 'FETCH_FAIL':\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    case 'UPDATE_REQUEST':\n      return { ...state,\n        loadingUpdate: true\n      };\n\n    case 'UPDATE_SUCCESS':\n      return { ...state,\n        loadingUpdate: false\n      };\n\n    case 'UPDATE_FAIL':\n      return { ...state,\n        loadingUpdate: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function UserEditScreen() {\n  _s();\n\n  const [{\n    loading,\n    error,\n    loadingUpdate\n  }, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: ''\n  });\n  const {\n    state\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const params = useParams();\n  const {\n    id: userId\n  } = params;\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        dispatch({\n          type: 'FETCH_REQUEST'\n        });\n        const {\n          data\n        } = await axios.get(`/api/users/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${userInfo.token}`\n          }\n        });\n        setName(data.name);\n        setEmail(data.email);\n        setIsAdmin(data.isAdmin);\n        dispatch({\n          type: 'FETCH_SUCCESS'\n        });\n      } catch (err) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: getError(err)\n        });\n      }\n    };\n\n    fetchData();\n  }, [userId, userInfo]);\n\n  const submitHandler = async e => {\n    e.preventDefault();\n\n    try {\n      dispatch({\n        type: 'UPDATE_REQUEST'\n      });\n      await axios.put(`/api/users/${userId}`, {\n        _id: userId,\n        name,\n        email,\n        isAdmin\n      }, {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      });\n      dispatch({\n        type: 'UPDATE_SUCCESS'\n      });\n      toast.success('User updated successfully');\n      navigate('/admin/users');\n    } catch (error) {\n      toast.error(getError(error));\n      dispatch({\n        type: 'UPDATE_FAIL'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"small-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Editeaza Utilizatorul $\", userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Editeaza Utilizatorul \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Nume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: email,\n          type: \"email\",\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        className: \"mb-3\",\n        type: \"checkbox\",\n        id: \"isAdmin\",\n        label: \"isAdmin\",\n        checked: isAdmin,\n        onChange: e => setIsAdmin(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          disabled: loadingUpdate,\n          type: \"submit\",\n          children: \"Updateaza\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 7\n        }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 3\n  }, this);\n}\n\n_s(UserEditScreen, \"l6MndUTFqBeDOBI5NIalDZyLqBo=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"sources":["D:/LICENTA - PROGRESS/frontend/src/screens/UserEditScreen.js"],"names":["axios","React","useContext","useEffect","useReducer","useState","Form","Button","Container","Helmet","useNavigate","useParams","toast","LoadingBox","MessageBox","Store","getError","reducer","state","action","type","loading","error","payload","loadingUpdate","UserEditScreen","dispatch","userInfo","params","id","userId","navigate","name","setName","email","setEmail","isAdmin","setIsAdmin","fetchData","data","get","headers","Authorization","token","err","submitHandler","e","preventDefault","put","_id","success","target","value","checked"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\n\nconst reducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'FETCH_REQUEST':\n\t\t\treturn { ...state, loading: true };\n\t\tcase 'FETCH_SUCCESS':\n\t\t\treturn { ...state, loading: false };\n\t\tcase 'FETCH_FAIL':\n\t\t\treturn { ...state, loading: false, error: action.payload };\n\t\tcase 'UPDATE_REQUEST':\n\t\t\treturn { ...state, loadingUpdate: true };\n\t\tcase 'UPDATE_SUCCESS':\n\t\t\treturn { ...state, loadingUpdate: false };\n\t\tcase 'UPDATE_FAIL':\n\t\t\treturn { ...state, loadingUpdate: false };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default function UserEditScreen() {\n\tconst [ { loading, error, loadingUpdate }, dispatch ] = useReducer(reducer, {\n\t\tloading: true,\n\t\terror: ''\n\t});\n\n\tconst { state } = useContext(Store);\n\tconst { userInfo } = state;\n\n\tconst params = useParams();\n\tconst { id: userId } = params;\n\tconst navigate = useNavigate();\n\n\tconst [ name, setName ] = useState('');\n\tconst [ email, setEmail ] = useState('');\n\tconst [ isAdmin, setIsAdmin ] = useState(false);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst fetchData = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tdispatch({ type: 'FETCH_REQUEST' });\n\t\t\t\t\tconst { data } = await axios.get(`/api/users/${userId}`, {\n\t\t\t\t\t\theaders: { Authorization: `Bearer ${userInfo.token}` }\n\t\t\t\t\t});\n\t\t\t\t\tsetName(data.name);\n\t\t\t\t\tsetEmail(data.email);\n\t\t\t\t\tsetIsAdmin(data.isAdmin);\n\t\t\t\t\tdispatch({ type: 'FETCH_SUCCESS' });\n\t\t\t\t} catch (err) {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'FETCH_FAIL',\n\t\t\t\t\t\tpayload: getError(err)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\tfetchData();\n\t\t},\n\t\t[ userId, userInfo ]\n\t);\n\n\tconst submitHandler = async (e) => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tdispatch({ type: 'UPDATE_REQUEST' });\n\t\t\tawait axios.put(\n\t\t\t\t`/api/users/${userId}`,\n\t\t\t\t{ _id: userId, name, email, isAdmin },\n\t\t\t\t{\n\t\t\t\t\theaders: { Authorization: `Bearer ${userInfo.token}` }\n\t\t\t\t}\n\t\t\t);\n\t\t\tdispatch({\n\t\t\t\ttype: 'UPDATE_SUCCESS'\n\t\t\t});\n\t\t\ttoast.success('User updated successfully');\n\t\t\tnavigate('/admin/users');\n\t\t} catch (error) {\n\t\t\ttoast.error(getError(error));\n\t\t\tdispatch({ type: 'UPDATE_FAIL' });\n\t\t}\n\t};\n\treturn (\n\t\t<Container className=\"small-container\">\n\t\t\t<Helmet>\n\t\t\t\t<title>Editeaza Utilizatorul ${userId}</title>\n\t\t\t</Helmet>\n\t\t\t<h1>Editeaza Utilizatorul {userId}</h1>\n\n\t\t\t{loading ? (\n\t\t\t\t<LoadingBox />\n\t\t\t) : error ? (\n\t\t\t\t<MessageBox variant=\"danger\">{error}</MessageBox>\n\t\t\t) : (\n\t\t\t\t<Form onSubmit={submitHandler}>\n\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"name\">\n\t\t\t\t\t\t<Form.Label>Nume</Form.Label>\n\t\t\t\t\t\t<Form.Control value={name} onChange={(e) => setName(e.target.value)} required />\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"email\">\n\t\t\t\t\t\t<Form.Label>Email</Form.Label>\n\t\t\t\t\t\t<Form.Control value={email} type=\"email\" onChange={(e) => setEmail(e.target.value)} required />\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Form.Check\n\t\t\t\t\t\tclassName=\"mb-3\"\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tid=\"isAdmin\"\n\t\t\t\t\t\tlabel=\"isAdmin\"\n\t\t\t\t\t\tchecked={isAdmin}\n\t\t\t\t\t\tonChange={(e) => setIsAdmin(e.target.checked)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t<Button disabled={loadingUpdate} type=\"submit\">\n\t\t\t\t\t\t\tUpdateaza\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{loadingUpdate && <LoadingBox />}\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t)}\n\t\t</Container>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}