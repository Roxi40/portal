{"ast":null,"code":"var _jsxFileName = \"D:\\\\ATTEMPT\\\\amazona\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useReducer, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_REQUEST':\n      return { ...state,\n        loadingUpdate: true\n      };\n\n    case 'UPDATE_SUCCESS':\n      return { ...state,\n        loadingUpdate: false\n      };\n\n    case 'UPDATE_FAIL':\n      return { ...state,\n        loadingUpdate: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function ProfileScreen() {\n  _s();\n\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const [name, setName] = useState(userInfo.name);\n  const [email, setEmail] = useState(userInfo.email);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [{\n    loadingUpdate\n  }, dispatch] = useReducer(reducer, {\n    loadingUpdate: false\n  });\n\n  const submitHandler = async e => {\n    e.preventDefault();\n\n    try {\n      const {\n        data\n      } = await axios.put('/api/users/profile', {\n        name,\n        email,\n        password\n      }, {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      });\n      dispatch({\n        type: 'UPDATE_SUCCESS'\n      });\n      ctxDispatch({\n        type: 'USER_SIGNIN',\n        payload: data\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      toast.success('User updated successfully');\n    } catch (err) {\n      dispatch({\n        type: 'FETCH_FAIL'\n      });\n      toast.error(getError(err));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container small-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Profil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"my-3\",\n      children: \"Profil\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Nume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ProfileScreen, \"5H1LrQRuFgC3UCSNO7LwP88WxUc=\");\n\n_c = ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["D:/ATTEMPT/amazona/frontend/src/screens/ProfileScreen.js"],"names":["React","useContext","useReducer","useState","Helmet","Form","Button","Store","toast","getError","axios","reducer","state","action","type","loadingUpdate","ProfileScreen","dispatch","ctxDispatch","userInfo","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","submitHandler","e","preventDefault","data","put","headers","Authorization","token","payload","localStorage","setItem","JSON","stringify","success","err","error","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useReducer, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\nimport axios from 'axios';\n\nconst reducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'UPDATE_REQUEST':\n\t\t\treturn { ...state, loadingUpdate: true };\n\t\tcase 'UPDATE_SUCCESS':\n\t\t\treturn { ...state, loadingUpdate: false };\n\t\tcase 'UPDATE_FAIL':\n\t\t\treturn { ...state, loadingUpdate: false };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default function ProfileScreen() {\n\tconst { state, dispatch: ctxDispatch } = useContext(Store);\n\tconst { userInfo } = state;\n\tconst [ name, setName ] = useState(userInfo.name);\n\tconst [ email, setEmail ] = useState(userInfo.email);\n\tconst [ password, setPassword ] = useState('');\n\tconst [ confirmPassword, setConfirmPassword ] = useState('');\n\n\tconst [ { loadingUpdate }, dispatch ] = useReducer(reducer, {\n\t\tloadingUpdate: false\n\t});\n\n\tconst submitHandler = async (e) => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tconst { data } = await axios.put(\n\t\t\t\t'/api/users/profile',\n\t\t\t\t{\n\t\t\t\t\tname,\n\t\t\t\t\temail,\n\t\t\t\t\tpassword\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\theaders: { Authorization: `Bearer ${userInfo.token}` }\n\t\t\t\t}\n\t\t\t);\n\t\t\tdispatch({\n\t\t\t\ttype: 'UPDATE_SUCCESS'\n\t\t\t});\n\t\t\tctxDispatch({ type: 'USER_SIGNIN', payload: data });\n\t\t\tlocalStorage.setItem('userInfo', JSON.stringify(data));\n\t\t\ttoast.success('User updated successfully');\n\t\t} catch (err) {\n\t\t\tdispatch({\n\t\t\t\ttype: 'FETCH_FAIL'\n\t\t\t});\n\t\t\ttoast.error(getError(err));\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"container small-container\">\n\t\t\t<Helmet>\n\t\t\t\t<title>Profil</title>\n\t\t\t</Helmet>\n\t\t\t<h1 className=\"my-3\">Profil</h1>\n\t\t\t<form onSubmit={submitHandler}>\n\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"name\">\n\t\t\t\t\t<Form.Label>Nume</Form.Label>\n\t\t\t\t\t<Form.Control value={name} onChange={(e) => setName(e.target.value)} required />\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"name\">\n\t\t\t\t\t<Form.Label>Email</Form.Label>\n\t\t\t\t\t<Form.Control type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"password\">\n\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t<Form.Control type=\"password\" onChange={(e) => setPassword(e.target.value)} />\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"password\">\n\t\t\t\t\t<Form.Label>Confirm Password</Form.Label>\n\t\t\t\t\t<Form.Control type=\"password\" onChange={(e) => setConfirmPassword(e.target.value)} />\n\t\t\t\t</Form.Group>\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t<Button type=\"submit\">Update</Button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}